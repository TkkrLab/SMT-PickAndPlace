# Smoothieboard configuration file, see http://smoothieware.org/configuring-smoothie
# NOTE Lines must not exceed 132 characters, and '#' characters mean what follows is ignored
## Robot module configurations : general handling of movement G-codes and slicing into moves

# Small Hollow shaft: https://www.robotdigg.com/product/43/Nema8-Hollow-Shaft-Stepper-Motor, 0.6A @ 3.9V
# Stepper motors: https://www.robotdigg.com/product/29/NEMA17-60mm-17hs6002-high-torque-stepper-motor: 1.5A @ 4V
# Bigger Hollow shaft stepper motor (11HY3406-9SK842), https://www.robotdigg.com/product/798/Nema11-hollow-shaft-stepper-for-SMT
# 0.8A @ 3.36V
# Calculator: https://www.prusaprinters.org/calculator/
# X, Y Pulley: 50 teeth ==> 64 steps/mm   (new 36 teeth pulley ==> 100 steps/mm)
# Z pully: 20 teeth ==> 106.67 steps/mm
# Command to set the steps per mm
# M92 X64.00

# Basic motion configuration
default_feed_rate                            50000             # Default speed (mm/minute) for G1/G2/G3 moves
default_seek_rate                            50000             # Default speed (mm/minute) for G0 moves
mm_per_arc_segment                           0.0              # Fixed length for line segments that divide arcs, 0 to disable
#mm_per_line_segment                         5                # Cut lines into segments this size
mm_max_arc_error                             0.01             # The maximum error for line segments that divide arcs 0 to disable
                                                              # note it is invalid for both the above be 0
                                                              # if both are used, will use largest segment length based on radius

# Arm solution configuration : Cartesian robot. Translates mm positions into stepper positions
# See http://smoothieware.org/stepper-motors
alpha_steps_per_mm                           243             #64 Steps per mm for alpha ( X ) stepper
beta_steps_per_mm                            64            # Steps per mm for beta ( Y ) stepper
gamma_steps_per_mm                           160              # Steps per mm for gamma ( Z ) stepper

# Planner module configuration : Look-ahead and acceleration configuration
# See http://smoothieware.org/motion-control
acceleration                                 10000             # Acceleration in mm/second/second.
#z_acceleration                              500              # Acceleration for Z only moves in mm/s^2, 0 uses acceleration which is the default. DO NOT SET ON A DELTA
junction_deviation                           0.05             # See http://smoothieware.org/motion-control#junction-deviation
#z_junction_deviation                        0.0              # For Z only moves, -1 uses junction_deviation, zero disables junction_deviation on z moves DO NOT SET ON A DELTA

# Cartesian axis speed limits
x_axis_max_speed                             50000            # Maximum speed in mm/min
y_axis_max_speed                             5000            # Maximum speed in mm/min
z_axis_max_speed                             500             # Maximum speed in mm/min

# Stepper module configuration 
# Pins are defined as  ports, and pin numbers, appending "!" to the number will invert a pin
# See http://smoothieware.org/pin-configuration and http://smoothieware.org/pinout
alpha_step_pin                               2.0              # Pin for alpha stepper step signal
alpha_dir_pin                                0.5              # Pin for alpha stepper direction, add '!' to reverse direction
alpha_en_pin                                 0.4              # Pin for alpha enable pin
alpha_current                                1.4              # X stepper motor current
alpha_max_rate                               50000.0           # Maximum rate in mm/min

# Using Y (beta) with external stepper driver in open drain mode ('o' added to the pin, see http://smoothieware.org/general-appendixes)
# NOTE: using external stepper motor driver!
beta_step_pin                                2.1o              # Pin for beta stepper step signal
beta_dir_pin                                 0.11o             # Pin for beta stepper direction, add '!' to reverse direction
beta_en_pin                                  0.10o!             # Pin for beta enable
beta_current                                 2.0              # Y stepper motor current
beta_max_rate                                5000.0           # Maxmimum rate in mm/min

gamma_step_pin                               2.2              # Pin for gamma stepper step signal
gamma_dir_pin                                0.20!            # Pin for gamma stepper direction, add '!' to reverse direction
gamma_en_pin                                 0.19             # Pin for gamma enable
gamma_current                                1.4              # Z stepper motor current
gamma_max_rate                               1000.0            # Maximum rate in mm/min


#delta_current                                    0.7          # First extruder stepper motor current
#epsilon_current                                 0.7          # Second extruder stepper motor current


motor_driver_control.alpha.enable           true              # alpha (X) is a TMC26X
motor_driver_control.alpha.axis             X                 # A to set the settings
motor_driver_control.alpha.chip             TMC4671_6100BOB   # chip name
motor_driver_control.alpha.alarm            false             # set to true means the error bits are checked
motor_driver_control.alpha.halt_on_alarm    false             # if set to true means ON_HALT is entered on any error bits being set
motor_driver_control.alpha.motor_type		3
motor_driver_control.alpha.step_width		10
motor_driver_control.alpha.motor_pole_pairs 1
motor_driver_control.alpha.pwm_polarities  	0
motor_driver_control.alpha.pwm_maxcnt    	3999
motor_driver_control.alpha.pwm_bbm_h		25		
motor_driver_control.alpha.pwm_bbm_l		25
motor_driver_control.alpha.pwm_sv_chop		7

motor_driver_control.alpha.adc_i_select 	402653440
motor_driver_control.alpha.adc_mcfg_a		16
motor_driver_control.alpha.adc_mcfg_b		16
motor_driver_control.alpha.ads_mclk_a		‭5360912‬
motor_driver_control.alpha.ads_mclk_b		0
motor_driver_control.alpha.adc_mdec_a		334
motor_driver_control.alpha.adc_mdec_b		334
motor_driver_control.alpha.adc_i0_scale		256
motor_driver_control.alpha.adc_i0_offset	‭33226‬
motor_driver_control.alpha.adc_i1_scale		256
motor_driver_control.alpha.adc_i1_offset	‭33197‬

motor_driver_control.alpha.abn_decoder_mode				0
motor_driver_control.alpha.abn_decoder_ppr				6900			
motor_driver_control.alpha.abn_decoder_count			‭5425‬			
motor_driver_control.alpha.abn_decoder_phi_e_offset		0
motor_driver_control.alpha.abn_decoder_phi_m_offset		0

motor_driver_control.alpha.pid_torque_flux_limit		2500	
motor_driver_control.alpha.pid_acceleration_limit		10000	
motor_driver_control.alpha.pid_velocity_limit			1000
motor_driver_control.alpha.pid_torque_p					200
motor_driver_control.alpha.pid_torque_i					2000
motor_driver_control.alpha.pid_flux_p					200
motor_driver_control.alpha.pid_flux_i					2000
motor_driver_control.alpha.pid_velocity_p				1200
motor_driver_control.alpha.pid_velocity_i				3000
motor_driver_control.alpha.pid_position_p				90
motor_driver_control.alpha.pid_position_i				0

motor_driver_control.alpha.spi_channel       0                # SPI channel 1 is sdcard channel
motor_driver_control.alpha.spi_cs_pin_ctrl   1.30             # SPI CS pin
motor_driver_control.alpha.spi_cs_pin_drv    0.16             # SPI CS pin
motor_driver_control.alpha.spi_frequency     100000           # SPI frequency



# Switch module for head light control
#switch.headlight.enable                            true             # Enable this module
#switch.headlight.startup_state                     false            # turned off at start
#switch.headlight.input_off_command                 M800             # Command that will turn this switch off
#switch.headlight.input_on_command                  M801             # Command that will turn this switch on
#switch.headlight.output_pin                        1.22             # Pin this module controls: small MOSFET Q4
#switch.headlight.output_type                       digital          # Digital means this is just an on or off pin

# Switch module for bottom light control
#switch.bottomlight.enable                          true             # Enable this module
#switch.bottomlight.startup_state                   false            # turned off at start
#switch.bottomlight.input_off_command               M802             # Command that will turn this switch off
#switch.bottomlight.input_on_command                M803             # Command that will turn this switch on
#switch.bottomlight.output_pin                      2.6              # Pin this module controls: small MOSFET Q9
#switch.bottomlight.output_type                     digital          # Digital means this is just an on or off pin

# Switch module for vacuum pump (Q5)
#switch.pump.enable                                 true            # Enable this module
#switch.pump.startup_state                          false           # turned off at start
#switch.pump.input_off_command                      M804            # Command that will turn this switch off
#switch.pump.input_on_command                       M805            # Command that will turn this switch on
#switch.pump.output_pin                             1.23            # Pin this module controls: big MOSFET Q5
#switch.pump.output_type                            digital         # Digital means this is just an on or off pin

# Switch module for vacuum nozzle 1 (left)
#switch.vacnoozleleft.enable                        true             # Enable this module
#switch.vacnoozleleft.startup_state                 false            # turned off at start
#switch.vacnoozleleft.input_off_command             M810             # Command that will turn this switch off
#switch.vacnoozleleft.input_on_command              M811             # Command that will turn this switch on
#switch.vacnoozleleft.output_pin                    2.5              # Pin this module controls: small MOSFET Q6
#switch.vacnoozleleft.output_type                   digital          # Digital means this is just an on or off pin

# Switch module for vacuum nozzle 2 (right)
#switch.vacnoozleright.enable                        true            # Enable this module
#switch.vacnoozleright.startup_state                 false           # turned off at start
#switch.vacnoozleright.input_off_command             M812            # Command that will turn this switch off
#switch.vacnoozleright.input_on_command              M813            # Command that will turn this switch on
#switch.vacnoozleright.output_pin                    2.7             # Pin this module controls: small MOSFET Q7
#switch.vacnoozleright.output_type                   digital         # Digital means this is just an on or off pin


## Endstops
# See http://smoothieware.org/endstops
endstops_enable                              false             # The endstop module is enabled by default and can be disabled here
#corexy_homing                               false            # Set to true if homing on a hbot or corexy
alpha_min_endstop                            1.24             # Pin to read min endstop, add a ! to invert if endstop is NO connected to ground
alpha_max_endstop                            1.25             # Pin to read max endstop, uncomment this and comment the above if using max endstops
alpha_homing_direction                       home_to_min      # Or set to home_to_max and set alpha_max and uncomment the alpha_max_endstop
alpha_min                                    0                # This gets loaded as the current position after homing when home_to_min is set
alpha_max                                    300              # This gets loaded as the current position after homing when home_to_max is set
beta_min_endstop                             1.26             # Pin to read min endstop, add a ! to invert if endstop is NO connected to ground
beta_max_endstop                             1.27             # Pin to read max endstop, uncomment this and comment the above if using max endstops
beta_homing_direction                        home_to_max      # Or set to home_to_max and set alpha_max and uncomment the alpha_max_endstop
beta_min                                     -300             # This gets loaded as the current position after homing when home_to_min is set
beta_max                                     0                # This gets loaded as the current position after homing when home_to_max is set
gamma_min_endstop                            1.28             # Pin to read min endstop, add a ! to invert if endstop is NO connected to ground
gamma_max_endstop                            1.29             # Pin to read max endstop, uncomment this and comment the above if using max endstops
gamma_homing_direction                       home_to_min      # Or set to home_to_max and set alpha_max and uncomment the alpha_max_endstop
gamma_min                                    -15              # This gets loaded as the current position after homing when home_to_min is set
gamma_max                                     60              # This gets loaded as the current position after homing when home_to_max is set

alpha_max_travel                             500              # Max travel in mm for alpha/X axis when homing
beta_max_travel                              500              # Max travel in mm for beta/Y axis when homing
gamma_max_travel                             150              # Max travel in mm for gamma/Z axis when homing

# Optional enable limit switches, actions will stop if any enabled limit switch is triggered
alpha_limit_enable                          false              # Set to true to enable X min and max limit switches
beta_limit_enable                           false              # Set to true to enable Y min and max limit switches
gamma_limit_enable                          false              # Set to true to enable Z min and max limit switches

# Endstops home at their fast feedrate first, then once the endstop is found they home again at their slow feedrate for accuracy
alpha_fast_homing_rate_mm_s                  50               # Alpha/X fast homing feedrate in mm/second
alpha_slow_homing_rate_mm_s                  30               # Alpha/X slow homing feedrate in mm/second
beta_fast_homing_rate_mm_s                   50               # Beta/Y  fast homing feedrate in mm/second
beta_slow_homing_rate_mm_s                   30               # Beta/Y  slow homing feedrate in mm/second
gamma_fast_homing_rate_mm_s                  30               # Gamma/Z fast homing feedrate in mm/second
gamma_slow_homing_rate_mm_s                  10               # Gamma/Z slow homing feedrate in mm/second

alpha_homing_retract_mm                      5                # Distance to retract from the endstop after it is hit for alpha/X
beta_homing_retract_mm                       5                # Distance to retract from the endstop after it is hit for beta/Y
gamma_homing_retract_mm                      5                # Distance to retract from the endstop after it is hit for gamma/Z

# Optional order in which axis will home, default is they all home at the same time,
# If this is set it will force each axis to home one at a time in the specified order
homing_order                                 YXZ              # X axis followed by Y then Z last
move_to_origin_after_home                    false            # Move XY to 0,0 after homing
#endstop_debounce_count                      100              # Uncomment if you get noise on your endstops, default is 100
#endstop_debounce_ms                         1                # Uncomment if you get noise on your endstops, default is 1 millisecond debounce
#home_z_first                                 true             # Uncomment and set to true to home the Z first, otherwise Z homes after XY

# End of endstop config
# Delete the above endstop section and uncomment next line and copy and edit Snippets/abc-endstop.config file to enable endstops for ABC axis
#include abc-endstop.config

## Z-probe
# See http://smoothieware.org/zprobe
#zprobe.enable                                false           # Set to true to enable a zprobe
#zprobe.probe_pin                             1.28!^          # Pin probe is attached to, if NC remove the !
#zprobe.slow_feedrate                         5               # Mm/sec probe feed rate
#zprobe.debounce_count                       100             # Set if noisy
#zprobe.fast_feedrate                         100             # Move feedrate mm/sec
#zprobe.probe_height                          5               # How much above bed to start probe
#gamma_min_endstop                           nc              # Normally 1.28. Change to nc to prevent conflict,


## Panel
# See http://smoothieware.org/panel
# Please find your panel on the wiki and copy/paste the right configuration here
#panel.enable                                 true             # Set to true to enable the panel code

# Example for reprap discount GLCD
# on glcd EXP1 is to left and EXP2 is to right, pin 1 is bottom left, pin 2 is top left etc.
# +5v is EXP1 pin 10, Gnd is EXP1 pin 9
#panel.lcd                                   reprap_discount_glcd     #
#panel.spi_channel                           0                 # SPI channel to use  ; GLCD EXP1 Pins 3,5 (MOSI, SCLK)
#panel.spi_cs_pin                            0.16              # SPI chip select     ; GLCD EXP1 Pin 4
#panel.encoder_a_pin                         3.25!^            # Encoder pin         ; GLCD EXP2 Pin 3
#panel.encoder_b_pin                         3.26!^            # Encoder pin         ; GLCD EXP2 Pin 5
#panel.click_button_pin                      1.30!^            # Click button        ; GLCD EXP1 Pin 2
#panel.buzz_pin                              1.31              # Pin for buzzer      ; GLCD EXP1 Pin 1
#panel.back_button_pin                       2.11!^            # Back button         ; GLCD EXP2 Pin 8
# setup for external sd card on the GLCD which uses the onboard sdcard SPI port
#panel.external_sd                     true              # set to true if there is an extrernal sdcard on the panel
#panel.external_sd.spi_channel         1                 # set spi channel the sdcard is on
#panel.external_sd.spi_cs_pin          0.28              # set spi chip select for the sdcard (or any spare pin)
#panel.external_sd.sdcd_pin            0.27!^            # sd detect signal (set to nc if no sdcard detect) (or any spare pin)
#panel.menu_offset                            0                 # Some panels will need 1 here

#panel.alpha_jog_feedrate                     5000              # X jogging feedrate in mm/min
#panel.beta_jog_feedrate                      5000              # Y jogging feedrate in mm/min
#panel.gamma_jog_feedrate                     500               # Z jogging feedrate in mm/min
#
#panel.hotend_temperature                     185               # Temp to set hotend when preheat is selected
#panel.bed_temperature                        60                # Temp to set bed when preheat is selected

## Custom menus : Example of a custom menu entry, which will show up in the Custom entry.
# NOTE _ gets converted to space in the menu and commands, | is used to separate multiple commands
#custom_menu.power_on.enable                true              #
#custom_menu.power_on.name                  Power_on          #
#custom_menu.power_on.command               M80               #
#
#custom_menu.power_off.enable               true              #
#custom_menu.power_off.name                 Power_off         #
#custom_menu.power_off.command              M81               #


## Network settings
# See http://smoothieware.org/network
network.enable                               false             # Enable the ethernet network services
network.webserver.enable                     false             # Enable the webserver
network.telnet.enable                        false             # Enable the telnet server
#network.ip_address                           auto             # Use dhcp to get ip address
# Uncomment the 3 below to manually setup ip address
#network.ip_address                           192.168.0.222   # The IP address
#network.ip_mask                              255.255.255.0   # The ip mask
#network.ip_gateway                           192.168.1.1     # The gateway address
#network.mac_override                         xx.xx.xx.xx.xx.xx  # Override the mac address, only do this if you have a conflict

## System configuration
# Serial communications configuration ( baud rate defaults to 9600 if undefined )
# For communication over the UART port, *not* the USB/Serial port
uart0.baud_rate                              115200           # Baud rate for the default hardware ( UART ) serial port

second_usb_serial_enable                     false             # This enables a second USB serial port
#leds_disable                                true             # Disable using leds after config loaded
#play_led_disable                            true             # Disable the play led

# Kill button maybe assigned to a different pin, set to the onboard pin by default
# See http://smoothieware.org/killbutton
kill_button_enable                           true             # Set to true to enable a kill button
kill_button_pin                              2.12             # Kill button pin. default is same as pause button 2.12 (2.11 is another good choice)
kill_button_toggle_enable                    true             # allows for latching estop button
#unkill_enable                               true             # false: do not unkill when button held or released; true: releasing kill button will leave kill

#msd_disable                                 false            # Disable the MSD (USB SDCARD), see http://smoothieware.org/troubleshooting#disable-msd
#dfu_enable                                  false            # For linux developers, set to true to enable DFU

# Only needed on a smoothieboard
# See http://smoothieware.org/currentcontrol
currentcontrol_module_enable                 true             # Control stepper motor current via the configuration file